Index: privilegeService/src/main/java/demo/model/po/UserPo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.model.po;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\npublic class UserPo {\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Long id;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.user_name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String userName;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.password\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String password;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.mobile\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String mobile;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.mobile_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Byte mobileVerified;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.email\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String email;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.email_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Byte emailVerified;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String name;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.avatar\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String avatar;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.last_login_time\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private LocalDateTime lastLoginTime;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.last_login_ip\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String lastLoginIp;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.open_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String openId;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.state\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Byte state;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.depart_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Long departId;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.gmt_create\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private LocalDateTime gmtCreate;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.gmt_modified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private LocalDateTime gmtModified;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.signature\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private String signature;\r\n\r\n    /**\r\n     *\r\n     * This field was generated by MyBatis Generator.\r\n     * This field corresponds to the database column auth_user.creator_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    private Long creatorId;\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.id\r\n     *\r\n     * @return the value of auth_user.id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Long getId() {\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.id\r\n     *\r\n     * @param id the value for auth_user.id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setId(Long id) {\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.user_name\r\n     *\r\n     * @return the value of auth_user.user_name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.user_name\r\n     *\r\n     * @param userName the value for auth_user.user_name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setUserName(String userName) {\r\n        this.userName = userName == null ? null : userName.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.password\r\n     *\r\n     * @return the value of auth_user.password\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.password\r\n     *\r\n     * @param password the value for auth_user.password\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setPassword(String password) {\r\n        this.password = password == null ? null : password.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.mobile\r\n     *\r\n     * @return the value of auth_user.mobile\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getMobile() {\r\n        return mobile;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.mobile\r\n     *\r\n     * @param mobile the value for auth_user.mobile\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setMobile(String mobile) {\r\n        this.mobile = mobile == null ? null : mobile.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.mobile_verified\r\n     *\r\n     * @return the value of auth_user.mobile_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Byte getMobileVerified() {\r\n        return mobileVerified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.mobile_verified\r\n     *\r\n     * @param mobileVerified the value for auth_user.mobile_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setMobileVerified(Byte mobileVerified) {\r\n        this.mobileVerified = mobileVerified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.email\r\n     *\r\n     * @return the value of auth_user.email\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.email\r\n     *\r\n     * @param email the value for auth_user.email\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setEmail(String email) {\r\n        this.email = email == null ? null : email.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.email_verified\r\n     *\r\n     * @return the value of auth_user.email_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Byte getEmailVerified() {\r\n        return emailVerified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.email_verified\r\n     *\r\n     * @param emailVerified the value for auth_user.email_verified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setEmailVerified(Byte emailVerified) {\r\n        this.emailVerified = emailVerified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.name\r\n     *\r\n     * @return the value of auth_user.name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.name\r\n     *\r\n     * @param name the value for auth_user.name\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setName(String name) {\r\n        this.name = name == null ? null : name.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.avatar\r\n     *\r\n     * @return the value of auth_user.avatar\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getAvatar() {\r\n        return avatar;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.avatar\r\n     *\r\n     * @param avatar the value for auth_user.avatar\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setAvatar(String avatar) {\r\n        this.avatar = avatar == null ? null : avatar.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.last_login_time\r\n     *\r\n     * @return the value of auth_user.last_login_time\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public LocalDateTime getLastLoginTime() {\r\n        return lastLoginTime;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.last_login_time\r\n     *\r\n     * @param lastLoginTime the value for auth_user.last_login_time\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setLastLoginTime(LocalDateTime lastLoginTime) {\r\n        this.lastLoginTime = lastLoginTime;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.last_login_ip\r\n     *\r\n     * @return the value of auth_user.last_login_ip\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getLastLoginIp() {\r\n        return lastLoginIp;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.last_login_ip\r\n     *\r\n     * @param lastLoginIp the value for auth_user.last_login_ip\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setLastLoginIp(String lastLoginIp) {\r\n        this.lastLoginIp = lastLoginIp == null ? null : lastLoginIp.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.open_id\r\n     *\r\n     * @return the value of auth_user.open_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getOpenId() {\r\n        return openId;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.open_id\r\n     *\r\n     * @param openId the value for auth_user.open_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setOpenId(String openId) {\r\n        this.openId = openId == null ? null : openId.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.state\r\n     *\r\n     * @return the value of auth_user.state\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Byte getState() {\r\n        return state;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.state\r\n     *\r\n     * @param state the value for auth_user.state\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setState(Byte state) {\r\n        this.state = state;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.depart_id\r\n     *\r\n     * @return the value of auth_user.depart_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Long getDepartId() {\r\n        return departId;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.depart_id\r\n     *\r\n     * @param departId the value for auth_user.depart_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setDepartId(Long departId) {\r\n        this.departId = departId;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.gmt_create\r\n     *\r\n     * @return the value of auth_user.gmt_create\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public LocalDateTime getGmtCreate() {\r\n        return gmtCreate;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.gmt_create\r\n     *\r\n     * @param gmtCreate the value for auth_user.gmt_create\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setGmtCreate(LocalDateTime gmtCreate) {\r\n        this.gmtCreate = gmtCreate;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.gmt_modified\r\n     *\r\n     * @return the value of auth_user.gmt_modified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public LocalDateTime getGmtModified() {\r\n        return gmtModified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.gmt_modified\r\n     *\r\n     * @param gmtModified the value for auth_user.gmt_modified\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setGmtModified(LocalDateTime gmtModified) {\r\n        this.gmtModified = gmtModified;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.signature\r\n     *\r\n     * @return the value of auth_user.signature\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public String getSignature() {\r\n        return signature;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.signature\r\n     *\r\n     * @param signature the value for auth_user.signature\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setSignature(String signature) {\r\n        this.signature = signature == null ? null : signature.trim();\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method returns the value of the database column auth_user.creator_id\r\n     *\r\n     * @return the value of auth_user.creator_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public Long getCreatorId() {\r\n        return creatorId;\r\n    }\r\n\r\n    /**\r\n     * This method was generated by MyBatis Generator.\r\n     * This method sets the value of the database column auth_user.creator_id\r\n     *\r\n     * @param creatorId the value for auth_user.creator_id\r\n     *\r\n     * @mbg.generated\r\n     */\r\n    public void setCreatorId(Long creatorId) {\r\n        this.creatorId = creatorId;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- privilegeService/src/main/java/demo/model/po/UserPo.java	(revision bfe16383d7ab0c375e48f530cb85a78bda10c2b4)
+++ privilegeService/src/main/java/demo/model/po/UserPo.java	(date 1606791020502)
@@ -1,7 +1,13 @@
 package demo.model.po;
 
+import lombok.Data;
+import org.springframework.data.annotation.Id;
+import org.springframework.data.relational.core.mapping.Table;
+
 import java.time.LocalDateTime;
 
+@Data
+@Table("auth_user")
 public class UserPo {
     /**
      *
@@ -10,6 +16,7 @@
      *
      * @mbg.generated
      */
+    @Id
     private Long id;
 
     /**
Index: privilegeService/src/main/java/demo/Controller/PrivilegeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.Controller;\r\n\r\nimport io.swagger.annotations.*;\r\nimport cn.edu.xmu.ooad.annotation.Audit;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n/**\r\n * @author chei1\r\n */\r\n@RestController\r\n@RequestMapping(value = \"/privilege\", produces = \"application/json;charset=UTF-8\")\r\npublic class PrivilegeController {\r\n\r\n    /***\r\n     * 取消用户权限\r\n     * @param id 用户id\r\n     * @param did 部门id\r\n     * @return\r\n     */\r\n    @ApiOperation(value = \"取消用户权限\")\r\n    @ApiImplicitParams({\r\n            @ApiImplicitParam(paramType = \"header\", dataType = \"String\", name = \"authorization\", value = \"Token\", required = true),\r\n            @ApiImplicitParam(name=\"id\", value=\"角色id\", required = true, dataType=\"Integer\", paramType=\"path\"),\r\n            @ApiImplicitParam(name=\"did\", value=\"部门id\", required = true, dataType=\"Integer\", paramType=\"path\")\r\n\r\n    })\r\n    @ApiResponses({\r\n            @ApiResponse(code = 0, message = \"成功\"),\r\n            @ApiResponse(code = 504, message = \"操作id不存在\")\r\n    })\r\n    @Audit\r\n    @DeleteMapping(\"/shops/{did}/adminuserroles/{id}\")\r\n    public Object revokeRole(@PathVariable Long did, @PathVariable Long id){\r\n        return null;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- privilegeService/src/main/java/demo/Controller/PrivilegeController.java	(revision bfe16383d7ab0c375e48f530cb85a78bda10c2b4)
+++ privilegeService/src/main/java/demo/Controller/PrivilegeController.java	(date 1606800485437)
@@ -1,11 +1,28 @@
 package demo.Controller;
 
+import cn.edu.xmu.ooad.annotation.Depart;
+import cn.edu.xmu.ooad.annotation.LoginUser;
+import cn.edu.xmu.ooad.model.VoObject;
+import cn.edu.xmu.ooad.util.Common;
+import cn.edu.xmu.ooad.util.ResponseCode;
+import cn.edu.xmu.ooad.util.ReturnObject;
+import com.github.pagehelper.PageInfo;
+import demo.model.bo.User;
+import demo.model.vo.PrivilegeVo;
 import io.swagger.annotations.*;
 import cn.edu.xmu.ooad.annotation.Audit;
-import org.springframework.web.bind.annotation.DeleteMapping;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.RestController;
+import org.springframework.http.HttpStatus;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.validation.BindingResult;
+import org.springframework.validation.annotation.Validated;
+import org.springframework.web.bind.annotation.*;
+import reactor.core.publisher.Flux;
+import reactor.core.publisher.Mono;
+import springfox.documentation.annotations.ApiIgnore;
+
+import javax.servlet.http.HttpServletResponse;
+import java.time.LocalDateTime;
+import java.util.List;
 
 /**
  * @author chei1
@@ -14,6 +31,13 @@
 @RequestMapping(value = "/privilege", produces = "application/json;charset=UTF-8")
 public class PrivilegeController {
 
+    private final PrivilegeRepository privilegeRepository;
+
+    public PrivilegeController(PrivilegeRepository privilegeRepository) {
+        this.privilegeRepository = privilegeRepository;
+    }
+
+
     /***
      * 取消用户权限
      * @param id 用户id
@@ -33,8 +57,340 @@
     })
     @Audit
     @DeleteMapping("/shops/{did}/adminuserroles/{id}")
-    public Object revokeRole(@PathVariable Long did, @PathVariable Long id){
+    public Mono<Void> revokeRole(@PathVariable Long did, @PathVariable Long userid, @PathVariable Long roleid){
+        return privilegeRepository.deleteById(id);
+    }
+
+    /***
+     * 赋予用户权限
+     * @param userid 用户id
+     * @param roleid 角色id
+     * @param createid 创建者id
+     * @param did 部门id
+     * @return
+     */
+    @ApiOperation(value = "赋予用户权限")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value = "Token", required = true),
+            @ApiImplicitParam(name="userid", value="用户id", required = true, dataType="Integer", paramType="path"),
+            @ApiImplicitParam(name="roleid", value="角色id", required = true, dataType="Integer", paramType="path"),
+            @ApiImplicitParam(name="did", value="部门id", required = true, dataType="Integer", paramType="path")
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+            @ApiResponse(code = 504, message = "操作id不存在")
+    })
+    @Audit
+    @PostMapping("/shops/{did}/adminusers/{userid}/roles/{roleid}")
+    public Object assignRole(@LoginUser Long createid, @PathVariable Long did, @PathVariable Long userid, @PathVariable Long roleid){
+
         return null;
+
+    }
+
+    /***
+     * 获得自己角色信息
+     * @author Xianwei Wang
+     * @return
+     */
+    @ApiOperation(value = "获得自己角色信息")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value = "Token", required = true),
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+
+    })
+    @Audit
+    @GetMapping("/adminusers/self/roles")
+    public Object getUserSelfRole(@LoginUser Long id){
+        ReturnObject<List> returnObject =  userService.getSelfUserRoles(id);
+        return Common.getListRetObject(returnObject);
+    }
+
+    /***
+     * 获得所有人角色信息
+     * @param id 用户id
+     * @param did 部门id
+     * @return
+     */
+    @ApiOperation(value = "获得所有人角色信息")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value = "Token", required = true),
+            @ApiImplicitParam(name="id", value="用户id", required = true, dataType="int", paramType="path"),
+            @ApiImplicitParam(name="did", value="部门id", required = true, dataType="int", paramType="path")
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+    })
+    @Audit
+    @GetMapping("/shops/{did}/adminusers/{id}/roles")
+    public Object getSelfRole(@PathVariable Long did, @PathVariable Long id){
+        ReturnObject<List> returnObject =  userService.getUserRoles(id, did);
+        if (returnObject.getCode() == ResponseCode.OK) {
+            return Common.getListRetObject(returnObject);
+        } else {
+            return Common.decorateReturnObject(returnObject);
+        }
+
+    }
+
+    /**
+     * 获得所有权限
+     * @return Object
+     * createdBy Ming Qiu 2020/11/03 23:57
+     */
+    @ApiOperation(value = "获得所有权限")
+    @ApiImplicitParams({
+            @ApiImplicitParam(name="authorization", value="Token", required = true, dataType="String", paramType="header")
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+    })
+    @Audit
+    @GetMapping("privileges")
+    public Object getAllPrivs(@RequestParam(required = false) Integer page, @RequestParam(required = false) Integer pageSize){
+
+        logger.debug("getAllPrivs: page = "+ page +"  pageSize ="+pageSize);
+
+        page = (page == null)?1:page;
+        pageSize = (pageSize == null)?10:pageSize;
+
+        logger.debug("getAllPrivs: page = "+ page +"  pageSize ="+pageSize);
+        ReturnObject<PageInfo<VoObject>> returnObject =  userService.findAllPrivs(page, pageSize);
+        return Common.getPageRetObject(returnObject);
+    }
+
+    /**
+     * 修改权限
+     * @param id : 权限id
+     * @return Object
+     * createdBy Ming Qiu 2020/11/03 23:57
+     */
+    @ApiOperation(value = "修改权限信息")
+    @ApiImplicitParams({
+            @ApiImplicitParam(name="authorization", value="Token", required = true, dataType="String", paramType="header"),
+            @ApiImplicitParam(name="id", required = true, dataType="String", paramType="path")
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+    })
+    @Audit
+    @PutMapping("privileges/{id}")
+    public Object changePriv(@PathVariable Long id, @Validated @RequestBody PrivilegeVo vo, BindingResult bindingResult, @LoginUser Long userId, @Depart Long departId,
+                             HttpServletResponse httpServletResponse){
+        logger.debug("changePriv: id = "+ id +" vo" + vo);
+        logger.debug("getAllPrivs: userId = " + userId +" departId = "+departId);
+        /* 处理参数校验错误 */
+        Object o = Common.processFieldErrors(bindingResult, httpServletResponse);
+        if(o != null){
+            return o;
+        }
+        ReturnObject<VoObject> returnObject = userService.changePriv(id, vo);
+
+        if (returnObject.getCode() == ResponseCode.OK) {
+            return Common.getRetObject(returnObject);
+        } else {
+            return Common.decorateReturnObject(returnObject);
+        }
+    }
+
+    /**
+     * auth007: 查询某一用户权限
+     * @author yue hao
+     * @param id
+     * @return Object
+     */
+    @ApiOperation(value = "获得某一用户的权限")
+    @ApiImplicitParams({
+            @ApiImplicitParam(name="authorization", value="Token", required = true, dataType="String", paramType="header"),
+            @ApiImplicitParam(name="id", required = true, dataType="String", paramType="path"),
+            @ApiImplicitParam(name="did", required = true, dataType="String", paramType="path"),
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+            @ApiResponse(code = 504, message = "操作id不存在")
+    })
+    @Audit // 需要认证
+    @GetMapping("/shops/{did}/adminusers/{id}/privileges")
+    public Object getPrivsByUserId(@PathVariable Long id, @PathVariable Long did){
+        ReturnObject<List> returnObject =  userService.findPrivsByUserId(id,did);
+        if (returnObject.getCode() == ResponseCode.OK) {
+            return Common.getListRetObject(returnObject);
+        } else {
+            return Common.decorateReturnObject(returnObject);
+        }
+    }
+
+    /**
+     * @author XQChen
+     * @date Created in 2020/11/8 0:33
+     **/
+    @ApiOperation(value = "auth003:查看自己信息",  produces="application/json")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value ="用户token", required = true)
+    })
+    @ApiResponses({
+    })
+    @Audit
+    @GetMapping("adminusers")
+    public Object getUserSelf(@LoginUser Long userId) {
+        logger.debug("getUserSelf userId:" + userId);
+
+        Object returnObject;
+
+        ReturnObject<VoObject> user =  userService.findUserById(userId);
+        logger.debug("finderSelf: user = " + user.getData() + " code = " + user.getCode());
+
+        returnObject = Common.getRetObject(user);
+
+        return returnObject;
+    }
+
+    /**
+     * @author XQChen
+     * @date Created in 2020/11/8 0:33
+     **/
+    @Audit
+    @ApiOperation(value = "auth003: 查看任意用户信息",  produces="application/json")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String",  name = "authorization", value ="用户token", required = true),
+            @ApiImplicitParam(paramType = "path",   dataType = "Integer", name = "id",            value ="用户id",    required = true)
+    })
+    @ApiResponses({
+    })
+    @GetMapping("adminusers/{id}")
+    public Object getUserById(@PathVariable("id") Long id) {
+
+        Object returnObject = null;
+
+        ReturnObject<VoObject> user = userService.findUserById(id);
+        logger.debug("findUserById: user = " + user.getData() + " code = " + user.getCode());
+
+        if (!user.getCode().equals(ResponseCode.RESOURCE_ID_NOTEXIST)) {
+            returnObject = Common.getRetObject(user);
+        } else {
+            returnObject = Common.getNullRetObj(new ReturnObject<>(user.getCode(), user.getErrmsg()), httpServletResponse);
+        }
+
+        return returnObject;
+    }
+
+    /**
+     * @author XQChen
+     * @date Created in 2020/11/8 0:33
+     **/
+    @Audit
+    @ApiOperation(value = "auth003: 查询用户信息",  produces="application/json")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String",  name = "authorization", value ="用户token", required = true),
+            @ApiImplicitParam(paramType = "query",  dataType = "String",  name = "userName",      value ="用户名",    required = false),
+            @ApiImplicitParam(paramType = "query",  dataType = "String",  name = "mobile",        value ="电话号码",  required = false),
+            @ApiImplicitParam(paramType = "query",  dataType = "Integer", name = "page",          value ="页码",      required = true),
+            @ApiImplicitParam(paramType = "query",  dataType = "Integer", name = "pagesize",      value ="每页数目",  required = true)
+    })
+    @ApiResponses({
+    })
+    @GetMapping("adminusers/all")
+    public Object findAllUser(
+            @RequestParam  String  userName,
+            @RequestParam  String  mobile,
+            @RequestParam(required = false, defaultValue = "1")  Integer page,
+            @RequestParam(required = false, defaultValue = "10")  Integer pagesize) {
+
+        Object object = null;
+
+        if(page <= 0 || pagesize <= 0) {
+            object = Common.getNullRetObj(new ReturnObject<>(ResponseCode.FIELD_NOTVALID), httpServletResponse);
+        } else {
+            ReturnObject<PageInfo<VoObject>> returnObject = userService.findAllUsers(userName, mobile, page, pagesize);
+            logger.debug("findUserById: getUsers = " + returnObject);
+            object = Common.getPageRetObject(returnObject);
+        }
+
+        return object;
+    }
+
+    /**
+     * 分页查询所有角色
+     *
+     * @author 24320182203281 王纬策
+     * @param page 页数
+     * @param pageSize 每页大小
+     * @return Object 角色分页查询结果
+     * createdBy 王纬策 2020/11/04 13:57
+     * modifiedBy 王纬策 2020/11/7 19:20
+     */
+    @ApiOperation(value = "查询角色", produces = "application/json")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value = "Token", required = true),
+            @ApiImplicitParam(paramType = "path", dataType = "int", name = "did", value = "部门id", required = true),
+            @ApiImplicitParam(paramType = "query", dataType = "int", name = "page", value = "页码", required = false),
+            @ApiImplicitParam(paramType = "query", dataType = "int", name = "pageSize", value = "每页数目", required = false)
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+    })
+    @Audit
+    @GetMapping("/shops/{did}/roles")
+    public Object selectAllRoles(@LoginUser @ApiIgnore @RequestParam(required = false) Long userId,
+                                 @Depart @ApiIgnore @RequestParam(required = false) Long departId,
+                                 @PathVariable("did") Long did,
+                                 @RequestParam(required = false, defaultValue = "1") Integer page,
+                                 @RequestParam(required = false, defaultValue = "10") Integer pageSize) {
+        logger.debug("selectAllRoles: page = "+ page +"  pageSize ="+pageSize);
+        if(did.equals(departId)){
+            ReturnObject<PageInfo<VoObject>> returnObject =  roleService.selectAllRoles(departId, page, pageSize);
+            return Common.getPageRetObject(returnObject);
+        }
+        else{
+            return Common.getNullRetObj(new ReturnObject<>(ResponseCode.FIELD_NOTVALID, String.format("部门id不匹配：" + did)), httpServletResponse);
+        }
+    }
+
+    /**
+     * 新增一个角色
+     *
+     * @author 24320182203281 王纬策
+     * @param vo 角色视图
+     * @param bindingResult 校验错误
+     * @param userId 当前用户id
+     * @return Object 角色返回视图
+     * createdBy 王纬策 2020/11/04 13:57
+     * modifiedBy 王纬策 2020/11/7 19:20
+     */
+    @ApiOperation(value = "新增角色", produces = "application/json")
+    @ApiImplicitParams({
+            @ApiImplicitParam(paramType = "header", dataType = "String", name = "authorization", value = "Token", required = true),
+            @ApiImplicitParam(paramType = "body", dataType = "RoleVo", name = "vo", value = "可修改的用户信息", required = true)
+    })
+    @ApiResponses({
+            @ApiResponse(code = 0, message = "成功"),
+            @ApiResponse(code = 736, message = "角色名已存在"),
+    })
+    @Audit
+    @PostMapping("/roles")
+    public Object insertRole(@Validated @RequestBody RoleVo vo, BindingResult bindingResult,
+                             @LoginUser @ApiIgnore @RequestParam(required = false) Long userId,
+                             @Depart @ApiIgnore @RequestParam(required = false) Long departId) {
+        logger.debug("insert role by userId:" + userId);
+        //校验前端数据
+        Object returnObject = Common.processFieldErrors(bindingResult, httpServletResponse);
+        if (null != returnObject) {
+            logger.debug("validate fail");
+            return returnObject;
+        }
+        Role role = vo.createRole();
+        role.setCreatorId(userId);
+        role.setDepartId(departId);
+        role.setGmtCreate(LocalDateTime.now());
+        ReturnObject retObject = roleService.insertRole(role);
+        if (retObject.getData() != null) {
+            httpServletResponse.setStatus(HttpStatus.CREATED.value());
+            return Common.getRetObject(retObject);
+        } else {
+            return Common.getNullRetObj(new ReturnObject<>(retObject.getCode(), retObject.getErrmsg()), httpServletResponse);
+        }
     }
 
 }
Index: privilegeService/src/main/java/demo/Controller/PrivilegeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.Controller;\r\n\r\nimport demo.model.bo.User;\r\nimport org.springframework.data.repository.reactive.ReactiveCrudRepository;\r\n\r\npublic interface PrivilegeRepository extends ReactiveCrudRepository<User,Long> {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- privilegeService/src/main/java/demo/Controller/PrivilegeRepository.java	(revision bfe16383d7ab0c375e48f530cb85a78bda10c2b4)
+++ privilegeService/src/main/java/demo/Controller/PrivilegeRepository.java	(date 1606790424747)
@@ -1,7 +1,10 @@
 package demo.Controller;
 
-import demo.model.bo.User;
+import demo.model.po.UserPo;
 import org.springframework.data.repository.reactive.ReactiveCrudRepository;
 
-public interface PrivilegeRepository extends ReactiveCrudRepository<User,Long> {
+public interface PrivilegeRepository extends ReactiveCrudRepository<UserPo,Long> {
+
+
+
 }
Index: privilegeService/src/main/java/demo/model/bo/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.model.bo;\r\n\r\nimport demo.model.po.UserPo;\r\nimport demo.model.vo.UserRetVo;\r\nimport demo.model.vo.UserSimpleRetVo;\r\nimport demo.model.vo.UserVo;\r\nimport lombok.Data;\r\nimport cn.edu.xmu.ooad.model.VoObject;\r\nimport cn.edu.xmu.ooad.util.Common;\r\nimport cn.edu.xmu.ooad.util.encript.AES;\r\nimport cn.edu.xmu.ooad.util.encript.SHA256;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n/**\r\n * 后台用户\r\n *\r\n * @author Ming Qiu\r\n * @date Created in 2020/11/3 20:10\r\n * Modified at 2020/11/4 21:23\r\n **/\r\n@Data\r\npublic class User implements VoObject {\r\n\r\n    public static String AESPASS = \"OOAD2020-11-01\";\r\n\r\n    /**\r\n     * 后台用户状态\r\n     */\r\n    public enum State {\r\n        NEW(0, \"新注册\"),\r\n        NORM(1, \"正常\"),\r\n        FORBID(2, \"封禁\"),\r\n        DELETE(3, \"废弃\");\r\n\r\n        private static final Map<Integer, State> stateMap;\r\n\r\n        static { //由类加载机制，静态块初始加载对应的枚举属性到map中，而不用每次取属性时，遍历一次所有枚举值\r\n            stateMap = new HashMap();\r\n            for (State enum1 : values()) {\r\n                stateMap.put(enum1.code, enum1);\r\n            }\r\n        }\r\n\r\n        private int code;\r\n        private String description;\r\n\r\n        State(int code, String description) {\r\n            this.code = code;\r\n            this.description = description;\r\n        }\r\n\r\n        public static State getTypeByCode(Integer code) {\r\n            return stateMap.get(code);\r\n        }\r\n\r\n        public Integer getCode() {\r\n            return code;\r\n        }\r\n\r\n        public String getDescription() {\r\n            return description;\r\n        }\r\n    }\r\n\r\n    private Long id;\r\n\r\n    private String userName;\r\n\r\n    private String password;\r\n\r\n    private String mobile;\r\n\r\n    private Boolean mobileVerified = false;\r\n\r\n    private String email;\r\n\r\n    private Boolean emailVerified = false;\r\n\r\n    private String name;\r\n\r\n    private String avatar;\r\n\r\n    private LocalDateTime lastLoginTime;\r\n\r\n    private String lastLoginIp;\r\n\r\n    private String openId;\r\n\r\n    private State state = State.NEW;\r\n\r\n    private Long departId;\r\n\r\n    private LocalDateTime gmtCreate;\r\n\r\n    private LocalDateTime gmtModified;\r\n\r\n    private Long creatorId;\r\n\r\n    private String signature;\r\n\r\n    private String cacuSignature;\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param po Po对象\r\n     */\r\n    public User(UserPo po){\r\n        this.id = po.getId();\r\n        this.userName = po.getUserName();\r\n        this.password =po.getPassword();\r\n        this.mobile = AES.decrypt(po.getMobile(),AESPASS);\r\n        if (null != po.getMobileVerified()) {\r\n            this.mobileVerified = po.getMobileVerified() == 1;\r\n        }\r\n        this.email = AES.decrypt(po.getEmail(),AESPASS);\r\n\r\n        if (null != po.getEmailVerified()) {\r\n            this.emailVerified = po.getEmailVerified() == 1;\r\n        }\r\n        this.name = AES.decrypt(po.getName(), AESPASS);\r\n        this.avatar = po.getAvatar();\r\n        this.lastLoginTime = po.getLastLoginTime();\r\n        this.lastLoginIp = po.getLastLoginIp();\r\n        this.openId = po.getOpenId();\r\n        if (null != po.getState()) {\r\n            this.state = State.getTypeByCode(po.getState().intValue());\r\n        }\r\n        this.departId = po.getDepartId();\r\n        this.creatorId = po.getCreatorId();\r\n        this.gmtCreate = po.getGmtCreate();\r\n        this.gmtModified = po.getGmtModified();\r\n        this.signature = po.getSignature();\r\n\r\n        StringBuilder signature = Common.concatString(\"-\", po.getUserName(), po.getPassword(),\r\n                po.getMobile(),po.getEmail(),po.getOpenId(),po.getState().toString(),po.getDepartId().toString(),\r\n                po.getCreatorId().toString());\r\n        this.cacuSignature = SHA256.getSHA256(signature.toString());\r\n    }\r\n\r\n\r\n    /**\r\n     * Create return Vo object\r\n     * @author XQChen\r\n     * @return\r\n     */\r\n    @Override\r\n    public UserRetVo createVo() {\r\n        UserRetVo userRetVo = new UserRetVo();\r\n        userRetVo.setId(id);\r\n        userRetVo.setUserName(userName);\r\n        userRetVo.setMobile(mobile);\r\n        userRetVo.setName(name);\r\n        userRetVo.setEmail(email);\r\n        userRetVo.setAvatar(avatar);\r\n        userRetVo.setLastLoginTime(lastLoginTime.toString());\r\n        userRetVo.setLastLoginIp(lastLoginIp);\r\n        userRetVo.setStatus(state.getCode().byteValue());\r\n        userRetVo.setDepart_id(departId);\r\n        userRetVo.setGmtCreate(gmtCreate.toString());\r\n        userRetVo.setGmtModified(gmtModified.toString());\r\n\r\n        return userRetVo;\r\n    }\r\n\r\n    /**\r\n     * 对象未篡改\r\n     * @return\r\n     */\r\n    public Boolean authetic() {\r\n        return this.cacuSignature.equals(this.signature);\r\n    }\r\n\r\n    /**\r\n     * 用 UserEditVo 对象创建 用来更新 User 的 Po 对象\r\n     * @param vo vo 对象\r\n     * @return po 对象\r\n     */\r\n    public UserPo createUpdatePo(UserVo vo) {\r\n        String nameEnc = vo.getName() == null ? null : AES.encrypt(vo.getName(), User.AESPASS);\r\n        String mobEnc = vo.getMobile() == null ? null : AES.encrypt(vo.getMobile(), User.AESPASS);\r\n        String emlEnc = vo.getEmail() == null ? null : AES.encrypt(vo.getEmail(), User.AESPASS);\r\n        Byte state = (byte) this.state.code;\r\n\r\n        UserPo po = new UserPo();\r\n        po.setId(id);\r\n        po.setName(nameEnc);\r\n        po.setAvatar(vo.getAvatar());\r\n        po.setMobile(mobEnc);\r\n        po.setEmail(emlEnc);\r\n        po.setState(state);\r\n\r\n        po.setGmtCreate(null);\r\n        po.setGmtModified(LocalDateTime.now());\r\n\r\n        // 签名：user_name,password,mobile,email,open_id,state,depart_id,creator\r\n        StringBuilder signature = Common.concatString(\"-\",\r\n                this.getUserName(),\r\n                this.getPassword(),\r\n                mobEnc == null ? AES.encrypt(this.mobile, User.AESPASS) : mobEnc,\r\n                emlEnc == null ? AES.encrypt(this.email, User.AESPASS) : emlEnc,\r\n                this.getOpenId(),\r\n                state.toString(),\r\n                this.getDepartId().toString(),\r\n                this.getCreatorId().toString());\r\n        po.setSignature(SHA256.getSHA256(signature.toString()));\r\n        return po;\r\n    }\r\n\r\n    /**\r\n     * 创建SimpleVo\r\n     * @return userSimpleRetVo\r\n     * @author Xianwei Wang\r\n     */\r\n    @Override\r\n    public UserSimpleRetVo createSimpleVo() {\r\n        UserSimpleRetVo userSimpleRetVo = new UserSimpleRetVo();\r\n        userSimpleRetVo.setId(this.id);\r\n        userSimpleRetVo.setUserName(this.userName);\r\n\r\n        return userSimpleRetVo;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- privilegeService/src/main/java/demo/model/bo/User.java	(revision bfe16383d7ab0c375e48f530cb85a78bda10c2b4)
+++ privilegeService/src/main/java/demo/model/bo/User.java	(date 1606790424760)
@@ -9,6 +9,7 @@
 import cn.edu.xmu.ooad.util.Common;
 import cn.edu.xmu.ooad.util.encript.AES;
 import cn.edu.xmu.ooad.util.encript.SHA256;
+import org.springframework.data.relational.core.mapping.Table;
 
 import java.time.LocalDateTime;
 import java.util.HashMap;
